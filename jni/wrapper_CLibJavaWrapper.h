/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class wrapper_CLibJavaWrapper */

#ifndef _Included_wrapper_CLibJavaWrapper
#define _Included_wrapper_CLibJavaWrapper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    initCollisionLibraryCLib
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_initCollisionLibraryCLib
  (JNIEnv *, jobject);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    addSiteSpecificationCLib
 * Signature: (Ljava/lang/String;IIDDD)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_addSiteSpecificationCLib
  (JNIEnv *, jobject, jstring, jint, jint, jdouble, jdouble, jdouble);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    addShapeSpecificationCLib
 * Signature: (Ljava/lang/String;ID)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_addShapeSpecificationCLib__Ljava_lang_String_2ID
  (JNIEnv *, jobject, jstring, jint, jdouble);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    addShapeSpecificationCLib
 * Signature: (Ljava/lang/String;IDD)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_addShapeSpecificationCLib__Ljava_lang_String_2IDD
  (JNIEnv *, jobject, jstring, jint, jdouble, jdouble);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    addShapeSpecificationCLib
 * Signature: (Ljava/lang/String;IDDD)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_addShapeSpecificationCLib__Ljava_lang_String_2IDDD
  (JNIEnv *, jobject, jstring, jint, jdouble, jdouble, jdouble);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    addAgentSpecificationCLib
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_addAgentSpecificationCLib
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    initCollisionControllerCLib
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_initCollisionControllerCLib
  (JNIEnv *, jobject);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    createAgentCLib
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_createAgentCLib
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    connectAgentsCLib
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_connectAgentsCLib
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    octTreeFromClusterCLib
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_octTreeFromClusterCLib
  (JNIEnv *, jobject, jint);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    showAgentCLib
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_showAgentCLib
  (JNIEnv *, jobject, jint);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    showClusterCLib
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_showClusterCLib
  (JNIEnv *, jobject, jint);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    showOctTreeCLib
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_wrapper_CLibJavaWrapper_showOctTreeCLib
  (JNIEnv *, jobject, jint);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    agentToString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_wrapper_CLibJavaWrapper_agentToString
  (JNIEnv *, jobject, jint);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    clusterToString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_wrapper_CLibJavaWrapper_clusterToString
  (JNIEnv *, jobject, jint);

/*
 * Class:     wrapper_CLibJavaWrapper
 * Method:    collisionControllerToString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_wrapper_CLibJavaWrapper_collisionControllerToString
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
